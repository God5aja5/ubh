# File: Dockerfile.ttyd
# Dockerfile for Ubuntu + ttyd web terminal
# Warning: Do NOT hardcode credentials in the image. Provide TTYD_BASIC_AUTH via env at runtime.
#
# Build:
#   docker build -f Dockerfile.ttyd -t ubuntu-ttyd .
# Run:
#   docker run -p 7681:7681 -e TTYD_BASIC_AUTH="user:STRONG_PASS" ubuntu-ttyd

FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV TTYD_PORT=7681
ENV TTYD_VERSION=1.6.3

RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates wget curl sudo bash procps \
    python3 python3-pip python3-setuptools \
    && rm -rf /var/lib/apt/lists/*

# Attempt to download prebuilt ttyd binary
RUN set -eux; \
    ARCH=$(dpkg --print-architecture); \
    if [ "$ARCH" = "amd64" ]; then \
       TARBALL="ttyd.${TTYD_VERSION}.linux.x86_64.tar.gz"; \
    elif [ "$ARCH" = "arm64" ]; then \
       TARBALL="ttyd.${TTYD_VERSION}.linux.arm64.tar.gz"; \
    else \
       TARBALL=""; \
    fi; \
    if [ -n "$TARBALL" ]; then \
      wget -qO /tmp/ttyd.tar.gz "https://github.com/tsl0922/ttyd/releases/download/${TTYD_VERSION}/${TARBALL}" || true; \
      if [ -f /tmp/ttyd.tar.gz ]; then tar -xzf /tmp/ttyd.tar.gz -C /tmp || true; fi; \
      if [ -f /tmp/ttyd ]; then install -m 0755 /tmp/ttyd /usr/local/bin/ttyd || true; fi; \
    fi

# Fallback to apt
RUN if ! command -v ttyd >/dev/null 2>&1; then apt-get update && apt-get install -y --no-install-recommends ttyd || true; fi || true

# Create default user (optional)
ARG USERNAME=ubuntu
RUN useradd -m -s /bin/bash ${USERNAME} || true

WORKDIR /home/${USERNAME}
RUN chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}

EXPOSE 7681

COPY entrypoint-ttyd.sh /usr/local/bin/entrypoint-ttyd.sh
RUN chmod +x /usr/local/bin/entrypoint-ttyd.sh

CMD ["/usr/local/bin/entrypoint-ttyd.sh"]